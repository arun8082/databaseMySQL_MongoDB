1
db.restaurants.find().pretty()

2
db.restaurants.find({}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1
}).pretty()
3
db.restaurants.find({}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).pretty()
4
db.restaurants.find({}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	"address.zipcode": 1
	_id: 0
}).pretty();
5
db.restaurants.find({
	borough: "Manhattan"
}).pretty()

db.restaurants.find({
	borough: 'Bronx'
}).pretty()

6
db.restaurants.find({
	borough: 'Bronx'
}).limit(5).pretty()

7
db.restaurants.find({
	borough: 'Bronx'
}).limit(5).skip(5).pretty()

8
db.restaurants.find({
	"grades.score": {
		$gt: 90
	}
}).limit(2).pretty()

9
db.restaurants.find({
	"grades": {
		$elemMatch: {
			score: {
				$gt: 80,
				$lt: 100
			}
		}
	}
}).limit(10).pretty()

10
db.restaurants.find({
	"address.coord.0": {
		$lt: -95.754168
	}
}).limit(10).pretty()

11, 12
db.restaurants.find({
	cuisine: {
		$nin: ["American"]
	},
	"grades.score": {
		$gt: 70
	},
	"address.coord": {
		$lt: -65.754168
	}
}).limit(10).pretty()

13
db.restaurants.find({
	
	cuisine: {
		$nin: ["American"]
	},
	borough: {
		$nin: ["Brooklyn"]
	},
	"grades.grade": "A"
}).sort({
	cuisine: -1
}).pretty()

14
db.restaurants.find({
	name: /^Wil/
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).limit(20).pretty()

15
db.restaurants.find({
	name: /ces$/
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).limit(20).pretty()

16
db.restaurants.find({
	name: /(Reg)/
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).limit(20).pretty()

17
db.restaurants.find({
	$or: [{
			cuisine: "American"
		}, {
			cuisine: "Chinese"
		}
	],
	borough: "bronx"
}).pretty()

18
db.restaurants.find({
	borough: {
		$in: ["Staten", "Island", "Queens", "bronxor Brooklyn"]
	}
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).sort({
	borough: 1
}).pretty()

19
db.restaurants.find({
	borough: {
		$nin: ["Staten", "Island", "Queens", "bronxor Brooklyn"]
	}
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).pretty()

20
db.restaurants.find({
	"grades.score": {
		$lte: 10
	}
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).pretty()

21
db.restaurants.find({
	$or: [{
			cuisine: "American"
		}, {
			cuisine: "Chinese"
		}
	],
	name: /^Wil/
}, {
	restaurant_id: 1,
	name: 1,
	borough: 1,
	cuisine: 1,
	_id: 0
}).pretty()

22
db.restaurants.find({
	grades: {
		$elemMatch: {
			grade: "A",
			score: 11,
			date: ISODate("2014-08-11T00:00:ooZ")
		}
	},
}, {
	restaurant_id: 1,
	name: 1,
	grades: 1
}).pretty()

23
db.restaurants.find({
	"grades.0.grade": "A",
	"grades.0.score": 9,
	"grades.0.date": ISODate("2014-08-11T00:00:00Z")

}, {
	restaurant_id: 1,
	name: 1,
	grades: 1,
	_id: 0
}).pretty()

24
db.restaurants.find({
	"address.coord.1": {
		$gt: 42,
		$lt: 52
	}
}, {
	restaurant_id: 1,
	name: 1,
	"address.coord": 1,
	_id: 0
}).pretty()

25
db.restaurants.find().sort({
	name: 1
}).pretty()

26
db.restaurants.find().sort({
	name: -1
}).pretty()

27
db.restaurants.find({}, {
	cuisine: 1,
	borough: 1
}).sort({
	cuisine: 1,
	borough: -1
}).pretty()

28
db.restaurants.insert({
	address: {
		building: "abc"
	}
})

db.restaurants.find({
	"address.street": {
		$exists: true
	}
}).pretty()

29
db.restaurants.find({
	"address.coord": {
		$type: "double"
	}
}).pretty()

30
db.restaurants.find({
	"grades.score": {
		$mod: [7, 0]
	}
}, {
	restaurant_id: 1,
	name: 1,
	grades: 1
}).pretty()

31
db.restaurants.find({
	name: /(mon)/
}, {
	name: 1,
	borough: 1,
	"address.coord": 1
}).pretty()

32
db.restaurants.find({
	name: /^Mad/
}, {
	name: 1,
	borough: 1,
	"address.coord": 1,
	cuisine: 1,
	_id: 0
}).pretty()
